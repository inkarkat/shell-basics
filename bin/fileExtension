#!/bin/bash

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-d|--strip|-b|--basename|-s|--split|-c INSERTION|--splice INSERTION] FILENAME [DEFAULT-EXT] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 'Try %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Print the file extension (without the leading .) of FILENAME (or DEFAULT-EXT /
nothing if no extension is found).
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    cat <<HELPTEXT
    -d|--strip	the extension is removed instead and the bare (path +) name
		without extension is printed
    -b|--basename
		both path and extension are removed; the bare name without path
		and extension is printed
    -s|--split	both (path +) name and extension are printed on separate lines,
		e.g. for parsing via read
    -c|--splice	INSERTION is inserted at the end of the file name, before the
		extension(s)
HELPTEXT
    printf 'Example: readarray -t fileSplit < <(%q --split "foo bar.tar.gz")\n' "$(basename "$1")"
}
action=ext
insertion=
case "$1" in
    --help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
    --strip|-d)		shift; action=strip;;
    --basename|-b)	shift; action=basename;;
    --split|-s)		shift; action=split;;
    --splice|-c)	shift; action=splice; insertion="$1"; shift;;
esac
if [ $# -lt 1 -o $# -gt 2 ]; then
    printUsage "$0" >&2
    exit 2
fi

filename=$1; shift
defaultExtension=$1; shift

# Handle at most three file extensions with each having a maximum of 10
# characters (to avoid false positives as in "invoice Mr. Flabberwocky.txt").
if [[ "$filename" =~ ^(.*)\.([[:alnum:]]{1,10}\.[[:alnum:]]{1,10}\.[[:alnum:]]{1,10})$ ]] ||
    [[ "$filename" =~ ^(.*)\.([[:alnum:]]{1,10}\.[[:alnum:]]{1,10})$ ]] ||
    [[ "$filename" =~ ^(.*)\.([[:alnum:]]{1,10})$ ]]; then
    name="${BASH_REMATCH[1]}"
    ext="${BASH_REMATCH[2]}"
else
    name="$filename"
    ext="$defaultExtension"
fi

case "$action" in
    ext)	printf '%s\n' "$ext";;
    strip)	printf '%s\n' "$name";;
    basename)	printf '%s\n' "$(basename -- "$name")";;
    split)	printf '%s\n%s\n' "$name" "$ext";;
    splice) 	printf '%s%s%s\n' "$name" "$insertion" "${ext:+.}$ext";;
    *)	    	printf >&2 'ASSERT: Invalid action: %s\n' "$action"; exit 2;;
esac
