#!/bin/bash
set -u
shopt -qs extglob
LC_NUMERIC=C

printUsage()
{
    cat <<HELPTEXT
Divide passed NUMBER by 10^(PRECISION + 1) (default: 100, i.e. using percent
numbers) and round with PRECISION fractional places.

Example: 50 -> 0.5
Example: 123456 -> 1234.6
Example: 1234567 2 -> 1234.57
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" 'NUMBER [PRECISION] [-?|-h|--help]'
}
case "${1:-}" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -lt 1 ]; then
    printUsage "$0" >&2
    exit 2
fi

round()
{
    local val
    printf -v val "%.${2:-1}f" "${1:?}"

    # Drop trailing .000
    val=${val%%*(0)}
    val=${val%.}

    printf '%s\n' "$val"
}


precision=${2:-1}
precisionPlusOne=$((precision + 1))
if [ $precisionPlusOne -gt ${#1} ]; then
    float=0
else
    float="${1:0: -$precisionPlusOne}.${1: -$precisionPlusOne}"

    # If the integer part is in the thousands or larger, there's no use to
    # include any fractions. Just round off to the closest integer value then.
    if [ ${#1} -ge $((precisionPlusOne + 4)) ]; then
	precision=0
    fi
fi
round "$float" "$precision"
