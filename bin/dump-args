#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Just print all supplied command-line arguments to standard error.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-a|--array NAME] [-v|--verbose] [--] [ARG ...] [-?|-h|--help]'
}
defaultPrefix=''
defaultSuffix=''
isVerbose=
verbosePrefix=''
verboseSuffix=': '
startIndex=1
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--array|-a)	shift; defaultPrefix="$1=("; defaultSuffix=')'; verbosePrefix="$1["; verboseSuffix=']='; startIndex=0; shift;;
	--verbose|-v)	shift; isVerbose=t;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

if [ "$isVerbose" ]; then
    let argCnt=$startIndex
    while [ $# -gt 0 ]
    do
	PRETTYPRINTQUOTEDARGS_PREFIX="${verbosePrefix}${argCnt}${verboseSuffix}" \
	    prettyPrintQuotedArgs -- "$1" >&2
	shift
	let argCnt+=1
    done
else
    quotedArgs=; if [ $# -gt 0 ]; then printf -v quotedArgs '%q ' "$@"; quotedArgs=${quotedArgs% }; fi
    if [ $# -gt 0 ]; then
	PRETTYPRINTQUOTEDARGS_PREFIX="$defaultPrefix" \
	    PRETTYPRINTQUOTEDARGS_SUFFIX="$defaultSuffix" \
	    exec prettyPrintQuotedArgs -- "$@"
    elif [ -n "${defaultPrefix}${defaultSuffix}" ]; then
	printf '%s%s\n' "$defaultPrefix" "$defaultSuffix"
    else
	exit 1
    fi >&2
fi
