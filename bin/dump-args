#!/bin/bash

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-a|--array NAME] [-v|--verbose] [--] [ARG ...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Just print all supplied command-line arguments to standard error.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --array|-a NAME	ARG(s) originate from an array named NAME and are
			printed as such (with 0-based index).
    --verbose|-v	Print each argument on a separate line and prepend the
			index.
HELPTEXT
}
defaultPrefix=''
defaultSuffix=''
isVerbose=
verbosePrefix=''
verboseSuffix=': '
startIndex=1
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--array|-a)	shift; defaultPrefix="$1=("; defaultSuffix=')'; verbosePrefix="$1["; verboseSuffix=']='; startIndex=0; shift;;
	--verbose|-v)	shift; isVerbose=t;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

if [ "$isVerbose" ]; then
    let argCnt=$startIndex
    while [ $# -gt 0 ]
    do
	PRETTYPRINTQUOTEDARGS_PREFIX="${verbosePrefix}${argCnt}${verboseSuffix}" \
	    prettyPrintQuotedArgs -- "$1" >&2
	shift
	let argCnt+=1
    done
else
    quotedArgs=; if [ $# -gt 0 ]; then printf -v quotedArgs '%q ' "$@"; quotedArgs=${quotedArgs% }; fi
    if [ $# -gt 0 ]; then
	PRETTYPRINTQUOTEDARGS_PREFIX="$defaultPrefix" \
	    PRETTYPRINTQUOTEDARGS_SUFFIX="$defaultSuffix" \
	    exec prettyPrintQuotedArgs -- "$@"
    elif [ -n "${defaultPrefix}${defaultSuffix}" ]; then
	printf '%s%s\n' "$defaultPrefix" "$defaultSuffix"
    else
	exit 1
    fi >&2
fi
