#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Print selected field(s) N (-N counted from behind) from stdin, separated by SEP.
HELPTEXT
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[-F|--field-separator FS] [-]N|SEP [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-i|--input FILESPEC [...] [-]N|SEP [...] [-?|-h|--help]'
    cat <<HELPTEXT
Print everything but passed field(s) N (-N counted from behind) from stdin.
HELPTEXT
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[-F|--field-separator FS] -v|--remove [-]N [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-i|--input FILESPEC [...] -v|--remove [-]N [...] [-?|-h|--help]'
}

typeset -a fsArgs=()
typeset -a awkArgs=()
isRemoveFields=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)		shift; printUsage "$0"; exit 0;;
	--input|-i)		shift; awkArgs+=("$1"); shift;;
	--remove|-v)		shift; isRemoveFields=t;;
	--field-separator|-F)	shift; fsArgs=(-F "$1"); shift;;
	--)			shift; break;;
	-+([0-9]))		break;;
	-*)			{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)			break;;
    esac
done

: ${isRemoveFields:=0}
exec awk "${fsArgs[@]}" -v "isRemoveFields=${isRemoveFields//t/1}" -v nrs="$*" '
BEGIN {
    split(nrs, numbers, " ")
    for (n in numbers) {
	if (numbers[n] >= 0) {
	    fields[numbers[n]] = 1
	} else {
	    negfields[-1 * numbers[n] - 1] = 1
	}
    }
}
1 {
    # Use FS as output separator if it is not a regular expression.
    firstTwoFields = $1 FS $2
    if (substr($0, 1, length(firstTwoFields)) == firstTwoFields) OFS = FS
}
{
    isFirst = 1
    for (i = 1; i <= NF; i++) {
	if (! xor(! isRemoveFields, i in fields || (NF - i) in negfields)) {
	    printf "%s%s", (isFirst ? "" : OFS), $i
	    isFirst = 0
	}
    }
    printf "%s", ORS
}
' "${awkArgs[@]}"
