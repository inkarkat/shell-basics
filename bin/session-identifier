#!/bin/bash

: ${SESSIONIDENTIFIER_COMMAND_JOINER=;}

printUsage()
{
    cat <<HELPTEXT
Generate a (hexadecimal or base64-encoded) session identifier for the current
system session (valid until the next reboot) / based on the passed COMMAND(s)
output.
Length is 16 characters by default; you can pass a different number (up to 64).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-b|--base64] [[-n|--count] N] [-c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...]] [-?|-h|--help]'
}

renderer=directDigest
count=16
commands=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--base64|-b)	shift; renderer='base64Encoded';;
	--count|-n)	shift; count="${1:?}"; shift;;

	--command|-c)	shift; commands+="${commands:+ $SESSIONIDENTIFIER_COMMAND_JOINER }$1"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    # Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
    # undo the effects of eval.
    printf -v quotedSimpleCommand '%q ' "$@"
    commands+="${commands:+ $SESSIONIDENTIFIER_COMMAND_JOINER }${quotedSimpleCommand% }"
fi
if [ -z "$commands" ]; then
    commands="readableHostname --long; uptime --since | sed -e 's#:[0-9][0-9]\$##'" # XXX: uptime output may be off by one second after suspend/resume; cut off the seconds.
fi

sessionIdentifier="$(eval "$commands")" || exit $?
[ -n "$sessionIdentifier" ] || exit 3

directDigest()
{
    head -c "$count" \
	&& printf '\n'
}

base64Encoded()
{
    head -c "$((((10 * count + 5) * 3 / 4) / 10))" \
	| base64
}

printf '%s\n' "$sessionIdentifier" \
    | sha256sum \
    | field 1 \
    | $renderer
