#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Write arguments as an execution trace (i.e. with \$PS4 prepended and indicating
the nesting level) to standard error, like "set -x" would do..
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[ARG ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

nestingPrefix=
if [ $SHLVL -gt 3 ]; then
    nesting="${PS4:0:1}"
    printf -v nestingPrefix "%$((SHLVL - 3))s" "${PS4:0:1}"; printf -v nestingPrefix %s "${nestingPrefix// /${PS4:0:1}}"
fi

isSkipFirst=
[ "$1" = eval ] && isSkipFirst=t

# Duplicated to +/\$isQuoted timestamp
# Duplicated to ../../verbose/bin/verbose
quotedArgs=
for arg
do
    if [ "$isSkipFirst" ] && [ -z "$quotedArgs" ]; then
	isSkipFirst=
	continue
    fi

    case "$arg" in
	*[$'\n\r\t\v']*) printf -v arg %q "$arg";;
	*[$'\\ `\'\"?*[]!+']*) printf -v arg %s "'${arg//\'/\'\\\'\'}'";;
    esac
    quotedArgs="${quotedArgs}${quotedArgs:+ }${arg}"
done

printf >&2 '%s%s\n' "${nestingPrefix}${PS4:-\$ }" "$quotedArgs"
