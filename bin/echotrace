#!/bin/bash

: ${ECHOTRACE_IFS=' '}
[ "$ECHOTRACE_IFS" = newline ] && ECHOTRACE_IFS=$' \\\n  '

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: [ECHOTRACE_IFS=STRING|newline] [ECHOTRACE_TRACEFILE=FILESPEC|&N] %q %s\n' "$(basename "$1")" '[--eval] [--] [SIMPLECOMMAND ...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Write arguments (separated by a space or \$ECHOTRACE_IFS) as an execution trace
(i.e. with \$PS4 prepended and indicating the nesting level) to standard error /
ECHOTRACE_TRACEFILE, like "set -x" would do (but without the execution).
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --eval		Print the evaluation result instead of the (quoted)
			eval.
HELPTEXT
}

printer()
{
    PRETTYPRINTQUOTEDARGS_IFS="$ECHOTRACE_IFS" \
	PRETTYPRINTQUOTEDARGS_PREFIX="$tracePrefix" \
	exec prettyPrintQuotedArgs -- "$@" >&3
}

while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--eval)		shift
			if [ "$1" = eval ]; then
			    shift
			    printer()
			    {
				joinBy >&3 --prefix "${tracePrefix}" -- "$ECHOTRACE_IFS" "$@"
			    }
			fi
			;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
[ $# -eq 0 ] && exit

case "$ECHOTRACE_TRACEFILE" in
    '')		exec 3>&2;;
    \&[0-9])	eval "exec 3>$ECHOTRACE_TRACEFILE";;
    ?*)		exec 3>>"$ECHOTRACE_TRACEFILE";;
esac

# Duplicated to ../../verbose/bin/verbose
nestingPrefix=
if [ $SHLVL -gt 3 ]; then
    nesting="${PS4:0:1}"
    printf -v nestingPrefix "%$((SHLVL - 3))s" "$nesting"; printf -v nestingPrefix %s "${nestingPrefix// /$nesting}"
fi
tracePrefix="${nestingPrefix}${PS4:-\$ }"

ECHOTRACE_IFS="${ECHOTRACE_IFS//$'\n'/$'\n'${tracePrefix}}"

printer "$@"
