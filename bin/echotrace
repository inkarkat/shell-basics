#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Write arguments as an execution trace (i.e. with \$PS4 prepended and indicating
the nesting level) to standard error / ECHOTRACE_TRACEFILE, like "set -x" would
do (but without the execution).
With --eval, the evaluation result will be printed instead of the (quoted) eval.
HELPTEXT
    printf 'Usage: [ECHOTRACE_TRACEFILE=FILESPEC|&N] %q %s\n' "$(basename "$1")" '[--eval] [--] [ARG ...] [-?|-h|--help]'
}
isEval=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --eval)		shift; [ "$1" = eval ] && isEval=t;;
    --)			shift;;
esac
[ $# -eq 0 ] && exit

case "$ECHOTRACE_TRACEFILE" in
    '')		exec 3>&2;;
    \&[0-9])	eval "exec 3>$ECHOTRACE_TRACEFILE";;
    ?*)		exec 3>>"$ECHOTRACE_TRACEFILE";;
esac

# Duplicated to ../../verbose/bin/verbose
nestingPrefix=
if [ $SHLVL -gt 3 ]; then
    nesting="${PS4:0:1}"
    printf -v nestingPrefix "%$((SHLVL - 3))s" "${PS4:0:1}"; printf -v nestingPrefix %s "${nestingPrefix// /${PS4:0:1}}"
fi

if [ "$isEval" ]; then
    shift
    allargs="$*"
    printf '%s\n' "${allargs%$'\n'}" | prefix >&3 -- "${nestingPrefix}${PS4:-\$ }"
    exit
fi

# Duplicated to +/\$isQuoted timestamp
# Duplicated to ../../verbose/bin/verbose
quotedArgs=
for arg
do
    case "$arg" in
	*[$'\n\r\t\v']*) printf -v arg %q "$arg";;
	*[$'\\ `\'\"?*[]!+']*) printf -v arg %s "'${arg//\'/\'\\\'\'}'";;
    esac
    quotedArgs="${quotedArgs}${quotedArgs:+ }${arg}"
done

printf >&3 '%s%s\n' "${nestingPrefix}${PS4:-\$ }" "$quotedArgs"
